// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using appPFE.data;

#nullable disable

namespace appPFE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240610094741_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LitSecteur", b =>
                {
                    b.Property<int>("litNum_Lit")
                        .HasColumnType("int");

                    b.Property<int>("secteurNum_Sec")
                        .HasColumnType("int");

                    b.HasKey("litNum_Lit", "secteurNum_Sec");

                    b.HasIndex("secteurNum_Sec");

                    b.ToTable("LitSecteur");
                });

            modelBuilder.Entity("appPFE.Modeles.Accouchement", b =>
                {
                    b.Property<int>("id_Acc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Acc"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("Num_Acc")
                        .HasColumnType("int");

                    b.Property<string>("O2_debit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("abondanceLiquideAmniotique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("actif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("anesthesie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aspiration_laryngoscope")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("couleurLiquideAmniotique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("date_Repture")
                        .HasColumnType("date");

                    b.Property<DateTime>("date_acc")
                        .HasColumnType("datetime2");

                    b.Property<string>("desobstruction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dilatation")
                        .HasColumnType("int");

                    b.Property<int>("duree_repture")
                        .HasColumnType("int");

                    b.Property<int>("duree_travail")
                        .HasColumnType("int");

                    b.Property<string>("etat_Cordon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("etat_Placenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("indicationCesarienne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instrumentale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("intubation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("medicament")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mode_acc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_Dr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("num_tel")
                        .HasColumnType("int");

                    b.Property<string>("odeurLiquideAmniotique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pcn")
                        .HasColumnType("int");

                    b.Property<int>("pn")
                        .HasColumnType("int");

                    b.Property<string>("preciserEtatCordon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("preciserEtatPlacenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rcf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tn")
                        .HasColumnType("int");

                    b.Property<string>("typeCesarienne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_Presentation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_Repture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_permeabiliteOrifices")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_prelevementMere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_prelevementNN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_travail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ventilation_masque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ventilation_tube")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Acc");

                    b.ToTable("Accouchements");
                });

            modelBuilder.Entity("appPFE.Modeles.Admission", b =>
                {
                    b.Property<int>("id_adm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_adm"));

                    b.Property<int>("AdmissionIpp")
                        .HasColumnType("int");

                    b.Property<int>("Num_adm")
                        .HasColumnType("int");

                    b.Property<string>("auTotal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codePathologique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("conduiteATenir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateSortie")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("discussionDiagnostique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("motif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pronosticImmediat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pronosticLongTerme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pronosticMoyenTerme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_adm");

                    b.HasIndex("AdmissionIpp");

                    b.ToTable("Admissions");
                });

            modelBuilder.Entity("appPFE.Modeles.AntecedentPersonnels", b =>
                {
                    b.Property<int>("Id_AntecP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_AntecP"));

                    b.Property<int>("AntIpp")
                        .HasColumnType("int");

                    b.Property<int>("IdAcc")
                        .HasColumnType("int");

                    b.Property<string>("types")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_AntecP");

                    b.HasIndex("AntIpp");

                    b.HasIndex("IdAcc")
                        .IsUnique();

                    b.ToTable("AntecedentPersonnels");
                });

            modelBuilder.Entity("appPFE.Modeles.AntecedentsFamiliaux", b =>
                {
                    b.Property<int>("Id_AntecF")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_AntecF"));

                    b.Property<int>("AgeMere")
                        .HasColumnType("int");

                    b.Property<int>("AgePere")
                        .HasColumnType("int");

                    b.Property<int>("PatientIpp")
                        .HasColumnType("int");

                    b.Property<string>("ProfessionSocialeMere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionSocialePere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addictionsSocialeM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addictionsSocialeP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("antecedentChirurgicauxMere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("antecedentChirurgicauxPere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("antecedentpMedicauxMere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("antecedentpMedicauxPere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("consanguinite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateMariage")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateNaissMere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateNaissPere")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("date_interogation")
                        .HasColumnType("date");

                    b.Property<string>("gouvernementMere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gouvernementPere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gs_rhesusMere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gs_rhesusPere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gynecoObsetetricaux")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("interrogation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("militaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nbreAnneeMariage")
                        .HasColumnType("int");

                    b.Property<string>("niveauEtudeMere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("niveauEtudePere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomPrenomMere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomPrenomPere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("poidsMere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("poidsPere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tailleMere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("taillePere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_AntecF");

                    b.HasIndex("PatientIpp");

                    b.ToTable("AntecedentFamiliaux");
                });

            modelBuilder.Entity("appPFE.Modeles.AspectGenerale", b =>
                {
                    b.Property<int>("id_Aspect")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Aspect"));

                    b.Property<int>("Num_Aspect")
                        .HasColumnType("int");

                    b.Property<string>("coloration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dexto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("examId")
                        .HasColumnType("int");

                    b.Property<string>("impressionGenerale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("malformationApparente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phototype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("poids")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ptlePc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ptlePoids")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ptleTaille")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("taille")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("temperature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Aspect");

                    b.HasIndex("examId")
                        .IsUnique();

                    b.ToTable("AspectGenerale");
                });

            modelBuilder.Entity("appPFE.Modeles.BilanBacteriologique", b =>
                {
                    b.Property<int>("Num_Bilan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num_Bilan"));

                    b.Property<string>("autreGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("autreMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("culture_protheseGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("culture_protheseMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ecbuGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ecbuMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hemocultureGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hemocultureMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pg_ppGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pg_ppMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("plGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("plMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ptpGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ptpMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Num_Bilan");

                    b.ToTable("BilanBacteriologique");
                });

            modelBuilder.Entity("appPFE.Modeles.BilanPrénatal", b =>
                {
                    b.Property<int>("Num_Bilan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num_Bilan"));

                    b.Property<int>("dateAmniocentese")
                        .HasColumnType("int");

                    b.Property<int>("dateAutre")
                        .HasColumnType("int");

                    b.Property<int>("dateDepistageDiabete")
                        .HasColumnType("int");

                    b.Property<int>("dateECBU")
                        .HasColumnType("int");

                    b.Property<int>("dateGS")
                        .HasColumnType("int");

                    b.Property<int>("dateNFS")
                        .HasColumnType("int");

                    b.Property<int>("dateTripleTest")
                        .HasColumnType("int");

                    b.Property<int>("dateVaccination")
                        .HasColumnType("int");

                    b.Property<int>("id_gros")
                        .HasColumnType("int");

                    b.Property<string>("resultatAmniocentese")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatAutre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatDepistageDiabete")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatECBU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatGS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatNFS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatTripleTest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatVaccination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("terme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeAmniocentese")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeAutre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeDepistageDiabete")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeECBU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeGS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeNFS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeTripleTest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeVaccination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Num_Bilan");

                    b.HasIndex("id_gros");

                    b.ToTable("BilanPrénatal");
                });

            modelBuilder.Entity("appPFE.Modeles.ConditionsTransfert", b =>
                {
                    b.Property<int>("Num_Condition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num_Condition"));

                    b.Property<int>("CtAdm")
                        .HasColumnType("int");

                    b.Property<string>("accompagnateurs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("arriver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("asepieM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("chaudMoIncubateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("chaudModalites")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("chaudRemarques")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coordonnees")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("date_Transfert")
                        .HasColumnType("date");

                    b.Property<string>("etatGeneral")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("glucoseMNatureSolutes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("glucoseMSiege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("glucoseMVoieDabord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("glucoseRSondeGastrique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identiteTransporteur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("infromationMParents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("infromationRTubeSongMere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("medicatise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("oxygeneMTecnique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("oxygeneRParametre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pendentTransfer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Num_Condition");

                    b.HasIndex("CtAdm");

                    b.ToTable("ConditionsTransfert");
                });

            modelBuilder.Entity("appPFE.Modeles.DdeEamenBiologique", b =>
                {
                    b.Property<int>("Num_Dde")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num_Dde"));

                    b.Property<DateOnly>("dateDde")
                        .HasColumnType("date");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ipp")
                        .HasColumnType("int");

                    b.HasKey("Num_Dde");

                    b.ToTable("DdeEamenBiologique");
                });

            modelBuilder.Entity("appPFE.Modeles.DdeEamenExploration", b =>
                {
                    b.Property<int>("Num_Dde")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num_Dde"));

                    b.Property<DateOnly>("dateDde")
                        .HasColumnType("date");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ipp")
                        .HasColumnType("int");

                    b.HasKey("Num_Dde");

                    b.ToTable("DdeEamenExploration");
                });

            modelBuilder.Entity("appPFE.Modeles.DdeReeducation", b =>
                {
                    b.Property<int>("Num_Dde")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num_Dde"));

                    b.Property<DateOnly>("dateDde")
                        .HasColumnType("date");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ipp")
                        .HasColumnType("int");

                    b.HasKey("Num_Dde");

                    b.ToTable("DdeReeducation");
                });

            modelBuilder.Entity("appPFE.Modeles.EchographiesAnténatales", b =>
                {
                    b.Property<int>("id_eco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_eco"));

                    b.Property<int>("Num_eco")
                        .HasColumnType("int");

                    b.Property<int>("id_gros")
                        .HasColumnType("int");

                    b.Property<string>("nomOp_datation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomOp_morphologiquePrécoce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomOp_morphologiqueTardive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_opérateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatOp_datation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatOp_morphologiquePrécoce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatOp_morphologiqueTardive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("résultat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_datation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_morphologiquePrécoce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_morphologiqueTardive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_eco");

                    b.HasIndex("id_gros");

                    b.ToTable("EchographiesAnténatales");
                });

            modelBuilder.Entity("appPFE.Modeles.Evolution", b =>
                {
                    b.Property<int>("Num_Ev")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num_Ev"));

                    b.Property<int>("AdmissionId")
                        .HasColumnType("int");

                    b.Property<string>("AutreGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutreMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("braceletAdmission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("braceletNaissance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("consignes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("date_evolution")
                        .HasColumnType("date");

                    b.Property<string>("digestifGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("digestifMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hemodynamiqueGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hemodynamiqueMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ictere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("metaboliqueGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("metaboliqueMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("neurlogiqueGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("neurlogiqueMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomsMedicins")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nutritionnelGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nutritionnelMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("poids")
                        .HasColumnType("int");

                    b.Property<string>("respiratoireGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("respiratoireMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("septiqueGarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("septiqueMatin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("valeur")
                        .HasColumnType("int");

                    b.HasKey("Num_Ev");

                    b.HasIndex("AdmissionId");

                    b.ToTable("Evolutions");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenAbdominal", b =>
                {
                    b.Property<int>("id_examA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_examA"));

                    b.Property<int>("ExamAbdo")
                        .HasColumnType("int");

                    b.Property<string>("abdomen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("anus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("anusHeure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("foie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ombilic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_examA");

                    b.HasIndex("ExamAbdo")
                        .IsUnique();

                    b.ToTable("ExamenAbdominal");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenCardHemo", b =>
                {
                    b.Property<int>("id_ExCardHEmo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_ExCardHEmo"));

                    b.Property<int>("Num_ExCardHEmo")
                        .HasColumnType("int");

                    b.Property<string>("auscultationCardiaque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("examId")
                        .HasColumnType("int");

                    b.Property<int>("fc")
                        .HasColumnType("int");

                    b.Property<string>("poulsFemoraux")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("poulsMS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("premierMiction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rythme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_ExCardHEmo");

                    b.HasIndex("examId")
                        .IsUnique();

                    b.ToTable("ExamenCardHemo");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenClinique", b =>
                {
                    b.Property<int>("id_exam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_exam"));

                    b.Property<int>("Num_exam")
                        .HasColumnType("int");

                    b.Property<int>("PatientIpp")
                        .HasColumnType("int");

                    b.Property<string>("age_Enfant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("au_Tota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("conduitAtenir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("date_Ex")
                        .HasColumnType("date");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("discutionDiagnostique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("heure_Ex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_Aspect")
                        .HasColumnType("int");

                    b.Property<int>("id_ExCardHEmo")
                        .HasColumnType("int");

                    b.Property<int>("id_ExN")
                        .HasColumnType("int");

                    b.Property<int>("id_ExOph")
                        .HasColumnType("int");

                    b.Property<int>("id_examA")
                        .HasColumnType("int");

                    b.Property<int>("id_examCP")
                        .HasColumnType("int");

                    b.Property<int>("id_examOrth")
                        .HasColumnType("int");

                    b.Property<int>("id_examResp")
                        .HasColumnType("int");

                    b.Property<int>("id_examS")
                        .HasColumnType("int");

                    b.Property<int>("id_examUG")
                        .HasColumnType("int");

                    b.Property<int>("jourVie")
                        .HasColumnType("int");

                    b.Property<string>("nom_Dr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prognostic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_exam");

                    b.HasIndex("PatientIpp");

                    b.ToTable("ExamenCliniques");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenCutanePhaneres", b =>
                {
                    b.Property<int>("id_examCP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_examCP"));

                    b.Property<int>("ExamIdforginkey")
                        .HasColumnType("int");

                    b.Property<int>("Num_examCP")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_examCP");

                    b.HasIndex("ExamIdforginkey")
                        .IsUnique();

                    b.ToTable("ExamenCutanePhaneres");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenNeurologique", b =>
                {
                    b.Property<int>("id_ExN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_ExN"));

                    b.Property<int>("NeuroId")
                        .HasColumnType("int");

                    b.Property<int>("Num_ExN")
                        .HasColumnType("int");

                    b.Property<string>("cri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fontanelleAnterieure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gesticulation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maturiteNeurologique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mouvementAnormaux")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reflexesArchaique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sutures")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tonusAxial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tonusPeripherique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vigilance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_ExN");

                    b.HasIndex("NeuroId")
                        .IsUnique();

                    b.ToTable("ExamenNeurologique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenOphtalmologique", b =>
                {
                    b.Property<int>("id_ExOph")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_ExOph"));

                    b.Property<int>("Num_ExOph")
                        .HasColumnType("int");

                    b.Property<string>("cristallinOeilDroit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cristallinOeilGauche")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("globuleOculairesOeilDroit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("globuleOculairesOeilGauche")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ophtId")
                        .HasColumnType("int");

                    b.Property<string>("pupillesOeilDroit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pupillesOeilGauche")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reflexePhotomoteurDroit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reflexePhotomoteurOeilGauche")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_ExOph");

                    b.HasIndex("ophtId")
                        .IsUnique();

                    b.ToTable("ExamenOphtalmologique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenOrthopedique", b =>
                {
                    b.Property<int>("id_examOrth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_examOrth"));

                    b.Property<int>("ExamOrth")
                        .HasColumnType("int");

                    b.Property<int>("Num_examOrth")
                        .HasColumnType("int");

                    b.Property<string>("barlow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clavicules")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hanches")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("membresInferieurs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("membresSuperieurs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ortolani")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rachis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_examOrth");

                    b.HasIndex("ExamOrth")
                        .IsUnique();

                    b.ToTable("ExamenOrthopedique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenRespiratoire", b =>
                {
                    b.Property<int>("id_examResp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_examResp"));

                    b.Property<int>("Num_ExResp")
                        .HasColumnType("int");

                    b.Property<int>("amplitationThoracique")
                        .HasColumnType("int");

                    b.Property<string>("apnee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ausclationPulmonaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("balancements_cot")
                        .HasColumnType("int");

                    b.Property<int>("batements_cot")
                        .HasColumnType("int");

                    b.Property<string>("cyanose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("entonnoir_cot")
                        .HasColumnType("int");

                    b.Property<string>("fiO2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fr")
                        .HasColumnType("int");

                    b.Property<string>("fr_ven")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("geignement_cot")
                        .HasColumnType("int");

                    b.Property<string>("morphplogieThoracique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("narine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("num_Ste")
                        .HasColumnType("int");

                    b.Property<string>("pause")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("repere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("respId")
                        .HasColumnType("int");

                    b.Property<string>("rythme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("saTo2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tirageSus_cot")
                        .HasColumnType("int");

                    b.Property<int>("total_cot")
                        .HasColumnType("int");

                    b.Property<string>("ventilation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_examResp");

                    b.HasIndex("respId")
                        .IsUnique();

                    b.ToTable("ExamenRespiratoire");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenSomatique", b =>
                {
                    b.Property<int>("id_examS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_examS"));

                    b.Property<int>("Examsom")
                        .HasColumnType("int");

                    b.Property<int>("Num_examS")
                        .HasColumnType("int");

                    b.Property<int>("agFarr")
                        .HasColumnType("int");

                    b.Property<int>("ageBallar")
                        .HasColumnType("int");

                    b.Property<int>("calculeBallar")
                        .HasColumnType("int");

                    b.Property<int>("calculeFarr")
                        .HasColumnType("int");

                    b.Property<int>("score")
                        .HasColumnType("int");

                    b.HasKey("id_examS");

                    b.HasIndex("Examsom")
                        .IsUnique();

                    b.ToTable("ExamenSomatique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenUroGenital", b =>
                {
                    b.Property<int>("id_examUG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_examUG"));

                    b.Property<int>("Num_examUG")
                        .HasColumnType("int");

                    b.Property<string>("densite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("differencies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("examId")
                        .HasColumnType("int");

                    b.Property<string>("fosses_Lombires")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hypogastre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("oge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ph")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("premierMiction")
                        .HasColumnType("int");

                    b.HasKey("id_examUG");

                    b.HasIndex("examId")
                        .IsUnique();

                    b.ToTable("ExamenUroGenital");
                });

            modelBuilder.Entity("appPFE.Modeles.Grossesse", b =>
                {
                    b.Property<int>("id_gros")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_gros"));

                    b.Property<DateOnly>("DateDernierConsul")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DateTransferEmbryen")
                        .HasColumnType("date");

                    b.Property<string>("Lieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbrConsulPrénatal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathologieGrav_Ops")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermeGrossse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeTransfer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("dateTransfertEmbryon")
                        .HasColumnType("date");

                    b.Property<DateOnly>("ddr")
                        .HasColumnType("date");

                    b.Property<int>("nbrEmbryonsCongelés")
                        .HasColumnType("int");

                    b.Property<int>("num_gros")
                        .HasColumnType("int");

                    b.Property<string>("termeNaissance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_gros")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_gros");

                    b.ToTable("Grossesse");
                });

            modelBuilder.Entity("appPFE.Modeles.Lit", b =>
                {
                    b.Property<int>("Num_Lit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num_Lit"));

                    b.Property<string>("nom_Dr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Num_Lit");

                    b.ToTable("Lit");
                });

            modelBuilder.Entity("appPFE.Modeles.Ordonnance", b =>
                {
                    b.Property<int>("num_Ord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("num_Ord"));

                    b.Property<DateOnly>("date_ordonnance")
                        .HasColumnType("date");

                    b.HasKey("num_Ord");

                    b.ToTable("Ordonnance");
                });

            modelBuilder.Entity("appPFE.Modeles.Patient", b =>
                {
                    b.Property<int>("Ipp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ipp"));

                    b.Property<string>("adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateNaiss")
                        .HasColumnType("datetime2");

                    b.Property<string>("lieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("priseChargeSociale")
                        .HasColumnType("int");

                    b.Property<string>("sexe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tel_Mere")
                        .HasColumnType("int");

                    b.Property<int>("tel_Pere")
                        .HasColumnType("int");

                    b.HasKey("Ipp");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("appPFE.Modeles.PatientUser", b =>
                {
                    b.Property<int>("Ipp")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Ipp", "User_id");

                    b.HasIndex("User_id");

                    b.ToTable("PatientUsers");
                });

            modelBuilder.Entity("appPFE.Modeles.Role", b =>
                {
                    b.Property<int>("Role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_id"));

                    b.Property<string>("nomRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Role_id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("appPFE.Modeles.ScoreD_apgar", b =>
                {
                    b.Property<int>("Num_score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num_score"));

                    b.Property<string>("coeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("couleur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reactivite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("respiration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("temps")
                        .HasColumnType("time");

                    b.Property<string>("tonus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("total")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("val_Cri")
                        .HasColumnType("int");

                    b.HasKey("Num_score");

                    b.ToTable("ScoreDapgar");
                });

            modelBuilder.Entity("appPFE.Modeles.Secteur", b =>
                {
                    b.Property<int>("Num_Sec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num_Sec"));

                    b.Property<string>("nom_Dr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Num_Sec");

                    b.ToTable("Secteur");
                });

            modelBuilder.Entity("appPFE.Modeles.StatuImmunitaire", b =>
                {
                    b.Property<int>("num_statut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("num_statut"));

                    b.Property<int>("dateAgHBs")
                        .HasColumnType("int");

                    b.Property<int>("dateCMV")
                        .HasColumnType("int");

                    b.Property<int>("dateHIC")
                        .HasColumnType("int");

                    b.Property<int>("dateHVC")
                        .HasColumnType("int");

                    b.Property<int>("dateRubecole")
                        .HasColumnType("int");

                    b.Property<int>("dateSyphilis")
                        .HasColumnType("int");

                    b.Property<int>("dateToxoplasme")
                        .HasColumnType("int");

                    b.Property<int>("id_gros")
                        .HasColumnType("int");

                    b.Property<string>("resultatAgHBs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatCMV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatHIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatHVC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatRubecole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatSyphilis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultatToxoplasme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeAgHBs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeCMV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeHIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeHVC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeRubecole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeSyphilis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termeToxoplasme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("num_statut");

                    b.HasIndex("id_gros");

                    b.ToTable("StatuImmunitaire");
                });

            modelBuilder.Entity("appPFE.Modeles.User", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_id"));

                    b.Property<DateTime>("createdat")
                        .HasColumnType("datetime2");

                    b.Property<int>("createdby")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("num_tel")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom_user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("refreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("refreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("situation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("statut")
                        .HasColumnType("bit");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updatedat")
                        .HasColumnType("datetime2");

                    b.Property<int>("updatedby")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("appPFE.Modeles.UserRole", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.HasKey("userId", "roleId");

                    b.HasIndex("roleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("LitSecteur", b =>
                {
                    b.HasOne("appPFE.Modeles.Lit", null)
                        .WithMany()
                        .HasForeignKey("litNum_Lit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("appPFE.Modeles.Secteur", null)
                        .WithMany()
                        .HasForeignKey("secteurNum_Sec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("appPFE.Modeles.Admission", b =>
                {
                    b.HasOne("appPFE.Modeles.Patient", "Patient")
                        .WithMany("Admissions")
                        .HasForeignKey("AdmissionIpp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("appPFE.Modeles.AntecedentPersonnels", b =>
                {
                    b.HasOne("appPFE.Modeles.Patient", "Patient")
                        .WithMany("AntecedentPersonnels")
                        .HasForeignKey("AntIpp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("appPFE.Modeles.Accouchement", "accouchement")
                        .WithOne("antecedentPersonnels")
                        .HasForeignKey("appPFE.Modeles.AntecedentPersonnels", "IdAcc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("accouchement");
                });

            modelBuilder.Entity("appPFE.Modeles.AntecedentsFamiliaux", b =>
                {
                    b.HasOne("appPFE.Modeles.Patient", "Patient")
                        .WithMany("AntecedentsFamiliaux")
                        .HasForeignKey("PatientIpp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("appPFE.Modeles.AspectGenerale", b =>
                {
                    b.HasOne("appPFE.Modeles.ExamenClinique", "ExamenClinique")
                        .WithOne("AspectGenerale")
                        .HasForeignKey("appPFE.Modeles.AspectGenerale", "examId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamenClinique");
                });

            modelBuilder.Entity("appPFE.Modeles.BilanPrénatal", b =>
                {
                    b.HasOne("appPFE.Modeles.Grossesse", "Grossesse")
                        .WithMany("BilanPrénatal")
                        .HasForeignKey("id_gros")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grossesse");
                });

            modelBuilder.Entity("appPFE.Modeles.ConditionsTransfert", b =>
                {
                    b.HasOne("appPFE.Modeles.Admission", "Admission")
                        .WithMany("ConditionsTransferts")
                        .HasForeignKey("CtAdm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admission");
                });

            modelBuilder.Entity("appPFE.Modeles.EchographiesAnténatales", b =>
                {
                    b.HasOne("appPFE.Modeles.Grossesse", "Grossesse")
                        .WithMany("EchographiesAnténatales")
                        .HasForeignKey("id_gros")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grossesse");
                });

            modelBuilder.Entity("appPFE.Modeles.Evolution", b =>
                {
                    b.HasOne("appPFE.Modeles.Admission", "Admission")
                        .WithMany("Evolutions")
                        .HasForeignKey("AdmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admission");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenAbdominal", b =>
                {
                    b.HasOne("appPFE.Modeles.ExamenClinique", "ExamenClinique")
                        .WithOne("ExamenAbdominal")
                        .HasForeignKey("appPFE.Modeles.ExamenAbdominal", "ExamAbdo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamenClinique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenCardHemo", b =>
                {
                    b.HasOne("appPFE.Modeles.ExamenClinique", "ExamenClinique")
                        .WithOne("ExamenCardHemo")
                        .HasForeignKey("appPFE.Modeles.ExamenCardHemo", "examId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamenClinique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenClinique", b =>
                {
                    b.HasOne("appPFE.Modeles.Patient", "Patient")
                        .WithMany("ExamenCliniques")
                        .HasForeignKey("PatientIpp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenCutanePhaneres", b =>
                {
                    b.HasOne("appPFE.Modeles.ExamenClinique", "ExamenClinique")
                        .WithOne("ExamenCutanePhaneres")
                        .HasForeignKey("appPFE.Modeles.ExamenCutanePhaneres", "ExamIdforginkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamenClinique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenNeurologique", b =>
                {
                    b.HasOne("appPFE.Modeles.ExamenClinique", "ExamenClinique")
                        .WithOne("ExamenNeurologique")
                        .HasForeignKey("appPFE.Modeles.ExamenNeurologique", "NeuroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamenClinique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenOphtalmologique", b =>
                {
                    b.HasOne("appPFE.Modeles.ExamenClinique", "ExamenClinique")
                        .WithOne("ExamenOphtalmologique")
                        .HasForeignKey("appPFE.Modeles.ExamenOphtalmologique", "ophtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamenClinique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenOrthopedique", b =>
                {
                    b.HasOne("appPFE.Modeles.ExamenClinique", "ExamenClinique")
                        .WithOne("ExamenOrthopedique")
                        .HasForeignKey("appPFE.Modeles.ExamenOrthopedique", "ExamOrth")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamenClinique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenRespiratoire", b =>
                {
                    b.HasOne("appPFE.Modeles.ExamenClinique", "ExamenClinique")
                        .WithOne("ExamenRespiratoire")
                        .HasForeignKey("appPFE.Modeles.ExamenRespiratoire", "respId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamenClinique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenSomatique", b =>
                {
                    b.HasOne("appPFE.Modeles.ExamenClinique", "ExamenClinique")
                        .WithOne("ExamenSomatique")
                        .HasForeignKey("appPFE.Modeles.ExamenSomatique", "Examsom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamenClinique");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenUroGenital", b =>
                {
                    b.HasOne("appPFE.Modeles.ExamenClinique", "ExamenClinique")
                        .WithOne("ExamenUroGenital")
                        .HasForeignKey("appPFE.Modeles.ExamenUroGenital", "examId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamenClinique");
                });

            modelBuilder.Entity("appPFE.Modeles.PatientUser", b =>
                {
                    b.HasOne("appPFE.Modeles.Patient", "Patient")
                        .WithMany("PatientUsers")
                        .HasForeignKey("Ipp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("appPFE.Modeles.User", "User")
                        .WithMany("PatientUsers")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("User");
                });

            modelBuilder.Entity("appPFE.Modeles.StatuImmunitaire", b =>
                {
                    b.HasOne("appPFE.Modeles.Grossesse", "Grossesse")
                        .WithMany("StatuImmunitaire")
                        .HasForeignKey("id_gros")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grossesse");
                });

            modelBuilder.Entity("appPFE.Modeles.UserRole", b =>
                {
                    b.HasOne("appPFE.Modeles.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("appPFE.Modeles.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("appPFE.Modeles.Accouchement", b =>
                {
                    b.Navigation("antecedentPersonnels");
                });

            modelBuilder.Entity("appPFE.Modeles.Admission", b =>
                {
                    b.Navigation("ConditionsTransferts");

                    b.Navigation("Evolutions");
                });

            modelBuilder.Entity("appPFE.Modeles.ExamenClinique", b =>
                {
                    b.Navigation("AspectGenerale");

                    b.Navigation("ExamenAbdominal");

                    b.Navigation("ExamenCardHemo");

                    b.Navigation("ExamenCutanePhaneres");

                    b.Navigation("ExamenNeurologique");

                    b.Navigation("ExamenOphtalmologique");

                    b.Navigation("ExamenOrthopedique");

                    b.Navigation("ExamenRespiratoire");

                    b.Navigation("ExamenSomatique");

                    b.Navigation("ExamenUroGenital");
                });

            modelBuilder.Entity("appPFE.Modeles.Grossesse", b =>
                {
                    b.Navigation("BilanPrénatal");

                    b.Navigation("EchographiesAnténatales");

                    b.Navigation("StatuImmunitaire");
                });

            modelBuilder.Entity("appPFE.Modeles.Patient", b =>
                {
                    b.Navigation("Admissions");

                    b.Navigation("AntecedentPersonnels");

                    b.Navigation("AntecedentsFamiliaux");

                    b.Navigation("ExamenCliniques");

                    b.Navigation("PatientUsers");
                });

            modelBuilder.Entity("appPFE.Modeles.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("appPFE.Modeles.User", b =>
                {
                    b.Navigation("PatientUsers");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
